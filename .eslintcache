[{"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/index.js":"1","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/reportWebVitals.js":"2","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/App/App.js":"3","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HabitPage/EditHabitPage.jsx":"4","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/utils/userService.js":"5","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HabitPage/HabitPage.jsx":"6","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HabitPage/CreateHabitPage.jsx":"7","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HomePage/HomePage.jsx":"8","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/SignupPage/SignupPage.jsx":"9","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/VisionPage/VisionPage.jsx":"10","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/LoginPage/LoginPage.jsx":"11","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/utils/tokenService.js":"12","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/EditHabit.jsx":"13","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/NavBar/NavBar.jsx":"14","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/Habit.jsx":"15","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/CreateHabit.jsx":"16","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/SignupForm/SignupForm.jsx":"17","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/VisionBoard/VisionBoard.jsx":"18","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Session/Session.jsx":"19","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Session/SessionPlot.jsx":"20","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/FetchQuote/FetchQuote.jsx":"21","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/HabitList.jsx":"22","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/VisionBoard/ChartComponent.jsx":"23","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/HabitCard.jsx":"24"},{"size":339,"mtime":1649992081546,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1649992081546,"results":"27","hashOfConfig":"26"},{"size":2837,"mtime":1649992081546,"results":"28","hashOfConfig":"26"},{"size":520,"mtime":1649992081546,"results":"29","hashOfConfig":"26"},{"size":1024,"mtime":1649992081546,"results":"30","hashOfConfig":"26"},{"size":643,"mtime":1649992081546,"results":"31","hashOfConfig":"26"},{"size":441,"mtime":1649992081546,"results":"32","hashOfConfig":"26"},{"size":861,"mtime":1649992081546,"results":"33","hashOfConfig":"26"},{"size":549,"mtime":1649992081546,"results":"34","hashOfConfig":"26"},{"size":442,"mtime":1649992081546,"results":"35","hashOfConfig":"26"},{"size":2025,"mtime":1649992081546,"results":"36","hashOfConfig":"26"},{"size":721,"mtime":1649992081546,"results":"37","hashOfConfig":"26"},{"size":2775,"mtime":1649992081546,"results":"38","hashOfConfig":"26"},{"size":1058,"mtime":1649992081546,"results":"39","hashOfConfig":"26"},{"size":998,"mtime":1649992081546,"results":"40","hashOfConfig":"26"},{"size":2623,"mtime":1649992081546,"results":"41","hashOfConfig":"26"},{"size":3176,"mtime":1649992081546,"results":"42","hashOfConfig":"26"},{"size":588,"mtime":1649992081546,"results":"43","hashOfConfig":"26"},{"size":1737,"mtime":1649992081546,"results":"44","hashOfConfig":"26"},{"size":2938,"mtime":1649992081546,"results":"45","hashOfConfig":"26"},{"size":1751,"mtime":1649992081546,"results":"46","hashOfConfig":"26"},{"size":1426,"mtime":1649992081546,"results":"47","hashOfConfig":"26"},{"size":2950,"mtime":1649992081546,"results":"48","hashOfConfig":"26"},{"size":1533,"mtime":1649992081546,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1b6zn2m",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/index.js",[],["105","106"],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/reportWebVitals.js",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/App/App.js",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HabitPage/EditHabitPage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/utils/userService.js",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HabitPage/HabitPage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HabitPage/CreateHabitPage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/HomePage/HomePage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/SignupPage/SignupPage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/VisionPage/VisionPage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/pages/LoginPage/LoginPage.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/utils/tokenService.js",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/EditHabit.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/NavBar/NavBar.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/Habit.jsx",["107"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Session from \"../Session/Session\";\nimport SessionPlot from \"../Session/SessionPlot\";\nimport FetchQuote from \"../FetchQuote/FetchQuote\";\n\nconst Habit = (props) => {\n  console.log(\"Habit being executed \");\n  return (\n    <div className=\"habit\">\n      <br />\n      <div id=\"habit-title\">\n        <h1> {props.habit.name}</h1>\n        <h4>{props.habit.description}</h4>\n      </div>\n\n      <br />\n      <div id=\"habit-image-div\">\n        <img id=\"habit-image\" src={props.habit.imageURL} alt=\"\" />\n        <div id=\"quote-on-image\">\n          <FetchQuote />\n        </div>\n      </div>\n\n      <br />\n      <br />\n\n      <div id=\"sessiondiv\">\n        <div className=\"bar-div\">\n          <SessionPlot habitId={props.habit._id} habitName={props.habit.name} />\n        </div>\n\n        <div className=\"calendar-div\">\n          <Session habitId={props.habit._id} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Habit;\n","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/CreateHabit.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/SignupForm/SignupForm.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/VisionBoard/VisionBoard.jsx",["108"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HabitList from \"../Habit/HabitList\";\nimport { VictoryPie } from \"victory\";\nimport ChartComponent from \"./ChartComponent\";\n\nconst VisionBoard = (props) => {\n  return (\n    <div className=\"dash-board\">\n      <br />\n      <br />\n      <Link to=\"/habits/create\" id=\"add-habit-link\">\n        <img src=\"./addVision.png\" alt=\"\" height=\"30px\" title=\"Add\" />\n      </Link>\n      <br />\n      <br />\n      <br />\n      <HabitList user={props.user} />\n      <ChartComponent />\n    </div>\n  );\n};\nexport default VisionBoard;\n","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Session/Session.jsx",["109"],"import React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Calendar from \"react-calendar\";\nimport axios from \"axios\";\n\nconst Session = (props) => {\n  const formRef = useRef(null);\n  const history = useHistory();\n  const [date, setDate] = useState(new Date());\n\n  const [duration, setDuration] = useState(\"0\");\n  const onChangeDate = (date) => {\n    setDate(date);\n    console.log(\"selected date is \", date.toDateString());\n  };\n  const onChangeDuration = (event) => {\n    setDuration(event.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const duration = formRef.current.duration.value;\n    const session = {\n      date: date,\n      duration: parseInt(duration),\n    };\n\n    axios\n      .post(\"/api/sessions/\" + props.habitId + \"/addsession\", session)\n      .then((res) => console.log());\n  };\n\n  return (\n    <div className=\"habit\">\n      <br />\n      <p>Session Date: {date.toDateString()}</p>\n      <p>session Duration: {parseInt(duration)}</p>\n\n      <form onSubmit={onSubmit} ref={formRef}>\n        <Calendar\n          onChange={onChangeDate}\n          type=\"date\"\n          value={date}\n          id=\"calendar\"\n        />\n\n        <div className=\"form-group\">\n          <label>Habit Duration:</label>\n          <input\n            type=\"number\"\n            name=\"duration\"\n            className=\"form-control\"\n            value={parseInt(duration)}\n            onChange={onChangeDuration}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create Session\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Session;\n","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Session/SessionPlot.jsx",["110","111","112"],"import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryLine,\n  VictoryLabel,\n  VictoryBar,\n  VictoryContainer,\n  VictoryAxis,\n} from \"victory\";\n\nconst ChartComponent = (props) => {\n  const lineData = props.sessionData;\n\n  return (\n    <>\n      <div id=\"graph\">\n        <VictoryChart theme={VictoryTheme.material}>\n          <VictoryAxis\n            dependentAxis={true}\n            style={{\n              grid: { stroke: \"grey\" },\n            }}\n          />\n          <VictoryAxis tickFormat={(x) => ``} />\n          <VictoryBar\n            interpolation=\"natural\"\n            style={{\n              data: {\n                stroke: \"green\",\n                fill:\n                  \"#\" + (Math.random().toString(16) + \"0000000\").slice(2, 8),\n              },\n            }}\n            data={lineData}\n            scale={{ x: \"time\", y: \"linear\" }}\n            labels={({ datum }) => datum.x}\n            labelComponent={\n              <VictoryLabel y={310} verticalAnchor={\"start\"} angle={-45} />\n            }\n          />\n        </VictoryChart>\n      </div>\n    </>\n  );\n};\n\nconst SessionPlot = (props) => {\n  const [sess, setSess] = useState([\n    {\n      x: \"\",\n      y: \"\",\n    },\n  ]);\n\n  const [sumDuration, setSumDuration] = useState(0);\n  const [sumDurationAll, setSumDurationAll] = useState(0);\n\n  useEffect(() => {\n    fetchAllSessions();\n  }, []);\n  const fetchAllSessions = () => {\n    axios\n      .get(\"/api/sessions/\" + props.habitId + \"/getAll\")\n      .then((res) => {\n        const sessionsAll = res.data;\n        const sessionsForPlot = [];\n        let sum = 0;\n        let sumAll = 0;\n        const sessions = sessionsAll.slice(Math.max(sessionsAll.length - 7, 0));\n        sessions.forEach((session) => {\n          console.log(\n            \"session date type is, \",\n            new Date(session.date).toDateString()\n          );\n          sessionsForPlot.push({\n            x: new Date(session.date).toDateString(),\n            y: parseInt(session.duration),\n          });\n          sum = sum + parseInt(session.duration);\n        });\n        sessionsAll.forEach((session) => {\n          sumAll = sumAll + parseInt(session.duration);\n        });\n\n        setSess(sessionsForPlot);\n        setSumDuration(sum);\n        setSumDurationAll(sumAll);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleBarPlot = (e) => {\n    e.preventDefault();\n\n    fetchAllSessions();\n  };\n\n  return (\n    <div className=\"habit\">\n      <ChartComponent sessionData={sess} />\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        value=\"Plot Sessions\"\n        onClick={handleBarPlot}\n      >\n        View Sessions\n      </button>\n      <h4>\n        This week: <b>{sumDuration}</b> minutes, Total around\n        <b> {Math.floor(sumDurationAll / 60)}</b> hours\n      </h4>\n    </div>\n  );\n};\n\nexport default SessionPlot;\n","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/FetchQuote/FetchQuote.jsx",["113","114"],"import React, { useState, useEffect } from \"react\";\n\nfunction FetchQuote() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [imgSrc, setImgSrc] = useState(\"\");\n  // var quotes = \"\";\n\n  useEffect(() => {\n    fetchQuote();\n    //This commented code was another API that provides 1 image per day, keeping it here for my reference\n    // const intervalID = setInterval(() => {\n    //   fetchQuote();\n    // }, 0.5 * 60 * 60 * 1000);\n    // return () => {\n    //   clearInterval(intervalID);\n    // };\n  }, []);\n\n  function fetchQuote() {\n    // fetch(\"http://quotes.rest/qod.json?category=inspire\")\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     setQuote(data.contents.quotes[0].quote);\n    //     setAuthor(data.contents.quotes[0].author);\n    //     setImgSrc(data.contents.quotes[0].background);\n    //     console.log(data);\n    //   });\n    fetch(\n      \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        chooseRandomQuote(data);\n\n        // setImgSrc(data.contents.quotes[0].background);\n      });\n  }\n  function chooseRandomQuote(data) {\n    // console.log(data.length);\n    let randNum = Math.floor(Math.random() * (data.length - 1));\n    while (randNum === 13 || randNum === 14)\n      randNum = Math.floor(Math.random() * (data.length - 1));\n    setQuote(data[randNum].quote);\n    setAuthor(data[randNum].author);\n  }\n\n  return (\n    <>\n      <h5>\n        <i>\"{quote}\"</i>\n      </h5>\n      <p>- {author}</p>\n      <img src={imgSrc} alt=\"\" />\n    </>\n  );\n}\n\nexport default FetchQuote;\n","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/HabitList.jsx",[],"/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/VisionBoard/ChartComponent.jsx",["115","116","117"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { VictoryPie, VictoryBar } from \"victory\";\n\nconst ChartComponent = () => {\n  const [piesDataForPlot, setPiesDataForPlot] = useState([]);\n  const [trackedPie, setTrackedPie] = useState([]);\n\n  const [colorScaleOne, setColorScaleOne] = useState([]);\n  const [colorScaleTwo, setColorScaleTwo] = useState([]);\n\n  const fetchHabitsAndSessionsData = () => {\n    axios\n      .get(\"/api/habits\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        const habitsAndSessions = res.data;\n        const piesForPlot = [];\n        let sumSessionDuration = 0;\n        let sumAllSessionsDuration = 0;\n        const minutesInWeek = 24 * 7 * 60;\n        const piesData = [];\n        let sessions = [];\n        habitsAndSessions.forEach((habit) => {\n          sumSessionDuration = 0;\n          sessions = habit.sessions.slice(\n            Math.max(habit.sessions.length - 7, 0)\n          );\n          sessions.forEach((session) => {\n            sumSessionDuration =\n              sumSessionDuration + parseInt(session.duration);\n          });\n          sumAllSessionsDuration = sumSessionDuration + sumAllSessionsDuration;\n\n          piesForPlot.push({\n            x: habit.name,\n            y: sumSessionDuration,\n          });\n        });\n        const colorsOne = [];\n\n        piesForPlot.forEach((pie) => {\n          pie.y = Math.floor((pie.y / sumAllSessionsDuration) * 100);\n          colorsOne.push(\n            \"#\" + (Math.random().toString(16) + \"0000000\").slice(2, 8)\n          );\n        });\n        setPiesDataForPlot(piesForPlot);\n        setColorScaleOne(colorsOne);\n        setTrackedPie([\n          {\n            x: \"Tracked\",\n            y: Math.floor((sumAllSessionsDuration / minutesInWeek) * 100),\n          },\n          {\n            x: \"Un-tracked\",\n            y: Math.floor(\n              ((minutesInWeek - sumAllSessionsDuration) / minutesInWeek) * 100\n            ),\n          },\n        ]);\n        setColorScaleTwo([\n          \"#\" + (Math.random().toString(16) + \"0000000\").slice(2, 8),\n          \"#\" + (Math.random().toString(16) + \"0000000\").slice(2, 8),\n        ]);\n        console.log(colorScaleTwo);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    fetchHabitsAndSessionsData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"pies-div\">\n        <div className=\"pie\">\n          <VictoryPie\n            data={piesDataForPlot}\n            colorScale={colorScaleOne}\n            labels={({ datum }) => `${datum.x}:\\n${datum.y}%`}\n          />\n        </div>\n\n        <div className=\"pie2\">\n          <VictoryPie\n            data={trackedPie}\n            colorScale={colorScaleTwo}\n            labels={({ datum }) => `${datum.x}:\\n${datum.y}%`}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChartComponent;\n","/mnt/volume_nyc1_01/habit-tracker-mern-victory/src/components/Habit/HabitCard.jsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"127","line":8,"column":9,"nodeType":"124","messageId":"125","endLine":8,"endColumn":16},{"ruleId":"122","severity":1,"message":"128","line":7,"column":3,"nodeType":"124","messageId":"125","endLine":7,"endColumn":14},{"ruleId":"122","severity":1,"message":"129","line":10,"column":3,"nodeType":"124","messageId":"125","endLine":10,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":63,"column":6,"nodeType":"132","endLine":63,"endColumn":8,"suggestions":"133"},{"ruleId":"122","severity":1,"message":"134","line":6,"column":18,"nodeType":"124","messageId":"125","endLine":6,"endColumn":27},{"ruleId":"130","severity":1,"message":"135","line":18,"column":6,"nodeType":"132","endLine":18,"endColumn":8,"suggestions":"136"},{"ruleId":"122","severity":1,"message":"137","line":3,"column":22,"nodeType":"124","messageId":"125","endLine":3,"endColumn":32},{"ruleId":"122","severity":1,"message":"138","line":25,"column":15,"nodeType":"124","messageId":"125","endLine":25,"endColumn":23},{"ruleId":"130","severity":1,"message":"139","line":75,"column":6,"nodeType":"132","endLine":75,"endColumn":8,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'VictoryPie' is defined but never used.","'history' is assigned a value but never used.","'VictoryLine' is defined but never used.","'VictoryContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllSessions'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'setImgSrc' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuote'. Either include it or remove the dependency array.",["144"],"'VictoryBar' is defined but never used.","'piesData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchHabitsAndSessionsData'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [fetchAllSessions]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchQuote]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchHabitsAndSessionsData]",{"range":"156","text":"157"},[1432,1434],"[fetchAllSessions]",[549,551],"[fetchQuote]",[2401,2403],"[fetchHabitsAndSessionsData]"]